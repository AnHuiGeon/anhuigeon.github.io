{"version":3,"file":"component---src-templates-category-list-js-1da7320b68838b7e4920.js","mappings":"8JAoCA,IAhCiB,SAAC,GAA4B,IAA3BA,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,YAG1B,OAFAC,QAAQC,IAAI,uBAAwBH,GACpCE,QAAQC,IAAI,2BAA4BF,GAEtC,gBAACG,EAAD,KACGJ,EAAQK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACd,OACE,gBAACC,EAAD,CAASC,IAAKF,EAAKG,OAAOC,MACvBJ,EAAKK,YAAYC,KACvBN,EAAKK,YAAYC,IAAIC,iBACrBP,EAAKK,YAAYC,IAAIC,gBAAgBC,iBAChC,gBAACC,EAAD,KACE,gBAAC,KAAD,CACAC,GAAI,IAAIV,EAAKK,YAAYM,WAAWX,EAAKG,OAAOC,KAChDQ,MAAO,CACLC,gBAAgB,OAAQb,EAAKK,YAAYC,IAAIC,gBAAgBC,gBAAgBM,OAAOC,SAASC,IAA9E,QAKnB,gBAACC,EAAD,KACE,gBAACC,EAAD,YAAYlB,EAAKK,YAAYc,OAC7B,gBAACC,EAAD,YAAepB,EAAKK,YAAYM,YAChC,gBAACU,EAAD,YAAWrB,EAAKK,YAAYiB,aAU1C,IAAMD,EAAOE,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,MACJH,EAAWG,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,MACRL,EAAQK,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,MACLN,EAAUM,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,MACPd,EAASc,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,MACNtB,EAAUsB,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,0BAIPzB,EAAYyB,EAAAA,QAAAA,IAAAA,WAAH,+DAAGA,CAAH,oF,wEC5Bf,UAXqB,SAAC,GAA2B,IAAzB5B,EAAwB,EAAxBA,YAAa6B,EAAW,EAAXA,KAGnC,OAFA5B,QAAQC,IAAI,qBAAqB2B,GACjC5B,QAAQC,IAAI,4BAA6BF,GAEvC,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKwB,MAAOK,EAAKC,KAAKC,aAAaP,QACnC,gBAAC,IAAD,CAAUzB,QAAS8B,EAAKG,kBAAkBC,MAAOjC,YAAaA","sources":["webpack://anhuigeon.github.io/./src/components/posts/postList.js","webpack://anhuigeon.github.io/./src/templates/categoryList.js"],"sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst PostList = ({allData, pageContext}) => {\n  console.log('postList.js allData:', allData)\n  console.log('postList.js pageContext:', pageContext)\n  return (\n    <Container>\n      {allData.map(({ node }) => {\n        return (\n          <PostBox key={node.fields.slug}>\n            {node.frontmatter.img &&\n\t\t\t\t\t\t\tnode.frontmatter.img.childImageSharp &&\n\t\t\t\t\t\t\tnode.frontmatter.img.childImageSharp.gatsbyImageData && (\n            <ImgBox >\n              <Link\n              to={'/'+node.frontmatter.categories+node.fields.slug}\n              style={{\n                backgroundImage: `url(${node.frontmatter.img.childImageSharp.gatsbyImageData.images.fallback.src})`,\n              }}\n              />\n            </ImgBox>\n            )}\n            <TextBox>\n              <Title>제목: {node.frontmatter.title}</Title>\n              <Category>분류: {node.frontmatter.categories}</Category>\n              <Date>날짜: {node.frontmatter.date}</Date>\n            </TextBox>\n          </PostBox>\n        )\n      })}\n    </Container>\n  )\n}\n\nexport default PostList\nconst Date = styled.div``;\nconst Category = styled.div``;\nconst Title = styled.div``;\nconst TextBox = styled.div``;\nconst ImgBox = styled.div``;\nconst PostBox = styled.div`\nmargin: 1%;\nwidth: 48%;\n`;\nconst Container = styled.div`\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\nwidth: 100%;\nheight: fit-content;\n`;","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Seo from \"../components/seo\"\nimport IndexPage from \"./index\";\nimport PostList from \"../components/posts/postList\";\n\nconst CategoryList = ({ pageContext, data }) => {\n  console.log('categoryList data:',data)\n  console.log('categoryList pageContext:', pageContext)\n  return (\n    <IndexPage>\n      <Seo title={data.site.siteMetadata.title}/>\n      <PostList allData={data.allMarkdownRemark.edges} pageContext={pageContext} />\n    </IndexPage>\n  )\n}\n\nexport default CategoryList\n\nexport const pageQuery = graphql`\nquery CategoryPostBySlug($category: String) {\n  site {\n    siteMetadata {\n      title\n    }\n  }\n  allMarkdownRemark(\n    limit: 2000\n    sort: { fields: [frontmatter___date], order: DESC }\n    filter: { frontmatter: { categories: { in: [$category] } } }\n  ) {\n    totalCount\n    edges {\n      node {\n        excerpt\n        fields {\n          slug\n        }\n        timeToRead\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          categories\n          img {\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED,\n                layout: FULL_WIDTH,\n                formats: [AUTO, AVIF, WEBP])\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`"],"names":["allData","pageContext","console","log","Container","map","node","PostBox","key","fields","slug","frontmatter","img","childImageSharp","gatsbyImageData","ImgBox","to","categories","style","backgroundImage","images","fallback","src","TextBox","Title","title","Category","Date","date","styled","data","site","siteMetadata","allMarkdownRemark","edges"],"sourceRoot":""}