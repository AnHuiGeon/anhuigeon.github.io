{"version":3,"file":"component---src-templates-category-list-js-7ac8e9755fa1fadb6f6b.js","mappings":"8JA0CA,IAtCiB,SAAC,GAA4B,IAA3BA,EAA0B,EAA1BA,QAA0B,EAAjBC,YAE1B,OADAC,QAAQC,IAAI,uBAAwBH,GAElC,gBAACI,EAAD,KACGJ,EAAQK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACd,OACE,gBAACC,EAAD,CAASC,IAAKF,EAAKG,OAAOC,MACxB,gBAAC,KAAD,CACAC,GAAI,IAAIL,EAAKM,YAAYC,WAAWP,EAAKG,OAAOC,MAE7CJ,EAAKM,YAAYE,KAChBR,EAAKM,YAAYE,IAAIC,iBACrBT,EAAKM,YAAYE,IAAIC,gBAAgBC,iBAOvC,gBAACC,EAAD,CACEC,MAAO,CACLC,gBAAgB,OAAQb,EAAKM,YAAYE,IAAIC,gBAAgBC,gBAAgBI,OAAOC,SAASC,IAA9E,OAInB,gBAACC,EAAD,KACE,gBAACC,EAAD,YAAYlB,EAAKM,YAAYa,OAC7B,gBAACC,EAAD,YAAepB,EAAKM,YAAYC,YAChC,gBAACc,EAAD,YAAWrB,EAAKM,YAAYgB,cAa5C,IAAMX,EAASY,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,kFAMNF,EAAOE,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,MACJH,EAAWG,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,MACRL,EAAQK,EAAAA,QAAAA,IAAAA,WAAH,2DAAGA,CAAH,MACLN,EAAUM,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,iBAGPtB,EAAUsB,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,sCAKPzB,EAAYyB,EAAAA,QAAAA,IAAAA,WAAH,+DAAGA,CAAH,oF,wEC9Cf,UATqB,SAAC,GAA2B,IAAzB5B,EAAwB,EAAxBA,YAAa6B,EAAW,EAAXA,KACnC,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKL,MAAOK,EAAKC,KAAKC,aAAaP,QACnC,gBAAC,IAAD,CAAUzB,QAAS8B,EAAKG,kBAAkBC,MAAOjC,YAAaA","sources":["webpack://anhuigeon.github.io/./src/components/posts/postList.js","webpack://anhuigeon.github.io/./src/templates/categoryList.js"],"sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst PostList = ({allData, pageContext}) => {\n  console.log('postList.js allData:', allData)\n  return (\n    <Container>\n      {allData.map(({ node }) => {\n        return (\n          <PostBox key={node.fields.slug}>\n            <Link\n            to={'/'+node.frontmatter.categories+node.fields.slug}\n            >\n              {node.frontmatter.img &&\n                node.frontmatter.img.childImageSharp &&\n                node.frontmatter.img.childImageSharp.gatsbyImageData && (\n              // <StyledLink\n              //   to={'/'+node.frontmatter.categories+node.fields.slug}\n              //   style={{\n              //     backgroundImage: `url(${node.frontmatter.img.childImageSharp.gatsbyImageData.images.fallback.src})`,\n              //   }}\n              // />\n              <ImgBox\n                style={{\n                  backgroundImage: `url(${node.frontmatter.img.childImageSharp.gatsbyImageData.images.fallback.src})`,\n                }}\n              ></ImgBox>\n              )}\n              <TextBox>\n                <Title>제목: {node.frontmatter.title}</Title>\n                <Category>분류: {node.frontmatter.categories}</Category>\n                <Date>날짜: {node.frontmatter.date}</Date>\n              </TextBox>\n            </Link>\n          </PostBox>\n        )\n      })}\n    </Container>\n  )\n}\n\nexport default PostList\n// const StyledLink = styled(props => <Link {...props} />)`\n// `;\nconst ImgBox = styled.div`\nwidth: 100%;\nheight: 60%;\nbackground-size: 100% 100%;\nbackground-repeat: no-repeat;\n`;\nconst Date = styled.div``;\nconst Category = styled.div``;\nconst Title = styled.div``;\nconst TextBox = styled.div`\nheight:40%;\n`;\nconst PostBox = styled.div`\nmargin: 1%;\nwidth: 48%;\nheight: 25vh;\n`;\nconst Container = styled.div`\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\nwidth: 100%;\nheight: fit-content;\n`;","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Seo from \"../components/seo\"\nimport IndexPage from \"./index\";\nimport PostList from \"../components/posts/postList\";\n\nconst CategoryList = ({ pageContext, data }) => {\n  return (\n    <IndexPage>\n      <Seo title={data.site.siteMetadata.title}/>\n      <PostList allData={data.allMarkdownRemark.edges} pageContext={pageContext} />\n    </IndexPage>\n  )\n}\n\nexport default CategoryList\n\nexport const pageQuery = graphql`\nquery CategoryPostBySlug($category: String) {\n  site {\n    siteMetadata {\n      title\n    }\n  }\n  allMarkdownRemark(\n    limit: 2000\n    sort: { fields: [frontmatter___date], order: DESC }\n    filter: { frontmatter: { categories: { in: [$category] } } }\n  ) {\n    totalCount\n    edges {\n      node {\n        excerpt\n        fields {\n          slug\n        }\n        timeToRead\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          categories\n          img {\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED,\n                layout: FULL_WIDTH,\n                formats: [AUTO, AVIF, WEBP])\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`"],"names":["allData","pageContext","console","log","Container","map","node","PostBox","key","fields","slug","to","frontmatter","categories","img","childImageSharp","gatsbyImageData","ImgBox","style","backgroundImage","images","fallback","src","TextBox","Title","title","Category","Date","date","styled","data","site","siteMetadata","allMarkdownRemark","edges"],"sourceRoot":""}